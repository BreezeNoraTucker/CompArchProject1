$date
	Fri Mar 15 00:57:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module twentyBitInc_tb $end
$var wire 20 ! out [19:0] $end
$var wire 1 " cout $end
$var reg 20 # a [19:0] $end
$scope module Increment $end
$var wire 20 $ a [19:0] $end
$var wire 1 % b $end
$var wire 20 & out [19:0] $end
$var wire 1 " cout $end
$var wire 20 ' carry [19:0] $end
$scope begin genblk1[1] $end
$var parameter 2 ( i $end
$scope module Adder_i $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + c $end
$var wire 1 , out $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 - i $end
$scope module Adder_i $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 c $end
$var wire 1 1 out $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 2 i $end
$scope module Adder_i $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 c $end
$var wire 1 6 out $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 7 i $end
$scope module Adder_i $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : c $end
$var wire 1 ; out $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 < i $end
$scope module Adder_i $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? c $end
$var wire 1 @ out $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 A i $end
$scope module Adder_i $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D c $end
$var wire 1 E out $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 F i $end
$scope module Adder_i $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 I c $end
$var wire 1 J out $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 K i $end
$scope module Adder_i $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 N c $end
$var wire 1 O out $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 P i $end
$scope module Adder_i $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 S c $end
$var wire 1 T out $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 U i $end
$scope module Adder_i $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 X c $end
$var wire 1 Y out $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 Z i $end
$scope module Adder_i $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 ] c $end
$var wire 1 ^ out $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 _ i $end
$scope module Adder_i $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 b c $end
$var wire 1 c out $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 d i $end
$scope module Adder_i $end
$var wire 1 e a $end
$var wire 1 f b $end
$var wire 1 g c $end
$var wire 1 h out $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 i i $end
$scope module Adder_i $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l c $end
$var wire 1 m out $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 n i $end
$scope module Adder_i $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q c $end
$var wire 1 r out $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 s i $end
$scope module Adder_i $end
$var wire 1 t a $end
$var wire 1 u b $end
$var wire 1 v c $end
$var wire 1 w out $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 x i $end
$scope module Adder_i $end
$var wire 1 y a $end
$var wire 1 z b $end
$var wire 1 { c $end
$var wire 1 | out $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 } i $end
$scope module Adder_i $end
$var wire 1 ~ a $end
$var wire 1 !" b $end
$var wire 1 "" c $end
$var wire 1 #" out $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 $" i $end
$scope module Adder_i $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 '" c $end
$var wire 1 (" out $end
$upscope $end
$upscope $end
$scope module Adder $end
$var wire 1 )" a $end
$var wire 1 % b $end
$var wire 1 *" c $end
$var wire 1 +" out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10011 $"
b10010 }
b10001 x
b10000 s
b1111 n
b1110 i
b1101 d
b1100 _
b1011 Z
b1010 U
b1001 P
b1000 K
b111 F
b110 A
b101 <
b100 7
b11 2
b10 -
b1 (
$end
#0
$dumpvars
x+"
x*"
x)"
x("
x'"
x&"
x%"
x#"
x""
x!"
x~
x|
x{
xz
xy
xw
xv
xu
xt
xr
xq
xp
xo
xm
xl
xk
xj
xh
xg
xf
xe
xc
xb
xa
x`
x^
x]
x\
x[
xY
xX
xW
xV
xT
xS
xR
xQ
xO
xN
xM
xL
xJ
xI
xH
xG
xE
xD
xC
xB
x@
x?
x>
x=
x;
x:
x9
x8
x6
x5
x4
x3
x1
x0
x/
x.
x,
x+
x*
x)
bx '
bx &
1%
bx $
bx #
x"
bx !
$end
#1
01
06
0;
0@
0E
0J
0O
0T
0Y
0^
0c
0h
0m
0r
0w
0|
0#"
0("
0,
0/
04
09
0>
0C
0H
0M
0R
0W
0\
0a
0f
0k
0p
0u
0z
0!"
0&"
0"
0*
0+
00
05
0:
0?
0D
0I
0N
0S
0X
0]
0b
0g
0l
0q
0v
0{
0""
0'"
b1 !
b1 &
1+"
b0 '
0*"
0)
0.
03
08
0=
0B
0G
0L
0Q
0V
0[
0`
0e
0j
0o
0t
0y
0~
0%"
0)"
b0 #
b0 $
#11
1,
1*
b10 !
b10 &
0+"
b1 '
1*"
1)"
b1 #
b1 $
#21
1("
1&"
1""
1!"
1{
1z
1v
1u
1q
1p
1l
1k
1g
1f
1b
1a
1]
1\
1X
1W
1S
1R
1N
1M
1I
1H
1D
1C
1?
1>
1:
19
15
14
10
1/
0,
b1111111111111111111 '
1+
01
06
0;
0@
0E
0J
0O
0T
0Y
0^
0c
0h
0m
0r
0w
0|
b10000000000000000000 !
b10000000000000000000 &
0#"
1)
1.
13
18
1=
1B
1G
1L
1Q
1V
1[
1`
1e
1j
1o
1t
1y
1~
b1111111111111111111 #
b1111111111111111111 $
#31
1"
b0 !
b0 &
0("
b11111111111111111111 '
1'"
1%"
b11111111111111111111 #
b11111111111111111111 $
#41
0/
1,
0+
04
09
0>
0C
0H
0M
0R
0W
0\
0a
0f
0k
0p
0u
0z
0!"
0&"
0"
0*
01
00
06
05
0;
0:
0@
0?
0E
0D
0J
0I
0O
0N
0T
0S
0Y
0X
0^
0]
0c
0b
0h
0g
0m
0l
0r
0q
0w
0v
0|
0{
0#"
0""
0("
0'"
b11 !
b11 &
1+"
b0 '
0*"
0.
03
08
0=
0B
0G
0L
0Q
0V
0[
0`
0e
0j
0o
0t
0y
0~
0%"
0)"
b10 #
b10 $
#51
